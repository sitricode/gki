name: Build GKI

on:
  workflow_call:
    inputs:
      KernelSU:
        type: string
      SUSFS4KSU:
        type: string
      BUILD_BOOTIMG:
        type: string
      BUILD_LKMS:
        type: string
      UPLOAD2GH:
        type: string
      KSU_MANUAL_HOOK:
        type: string
      LAST_BUILD:
        type: string

  workflow_dispatch:
    inputs:
      TODO:
        description: To do
        default: ''
        type: choice
        options:
          - "kernel"
          - "defconfig"

      KernelSU:
        description: KernelSU Variant
        default: ''
        type: choice
        options:
          - "None"
          - "Official"
          - "Next"

      SUSFS4KSU:
        description: SUSFS (KSU Needed)
        default: false
        type: boolean

      KSU_MANUAL_HOOK:
        description: KSU Manual Hook
        default: false
        type: boolean

      BUILD_BOOTIMG:
        description: Build Boot Image
        default: false
        type: boolean

      BUILD_LKMS:
        description: Build Kernel Modules
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set STATUS based on trigger type
        run: |
          case "${{ toJson(github.event.inputs) }}" in
            null)
              echo "STATUS=RELEASE" >> $GITHUB_ENV
              echo "TRIGGER=workflow_call" >> $GITHUB_ENV
              ;;
            *)
              echo "STATUS=BETA" >> $GITHUB_ENV
              echo "TRIGGER=workflow_dispatch" >> $GITHUB_ENV
              ;;
          esac

      - name: Verify STATUS
        run: echo "Triggered by $TRIGGER, STATUS is set to $STATUS"

      - name: Install dependencies
        run: |
          export MAN_DISABLE=true
          sudo apt update -y
          sudo apt install bc cpio flex bison aptitude gh git python-is-python3 tar perl wget curl lz4 zstd libarchive-tools ccache -y
          sudo aptitude install libssl-dev -y
          
      - name: Build Kernel
        env:
          KSU: ${{ inputs.KernelSU }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
          TOKEN: ${{ secrets.TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          USE_KSU_SUSFS: ${{ inputs.SUSFS4KSU }}
          BUILD_LKMS: ${{ inputs.BUILD_LKMS }}
          BUILD_BOOTIMG: ${{ inputs.BUILD_BOOTIMG }}
          USE_KSU_MANUAL_HOOK: ${{ inputs.KSU_MANUAL_HOOK }}
          LAST_BUILD: ${{ inputs.LAST_BUILD }}
          NIGHTLY_LINK: "https://nightly.link/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}"
          TODO: ${{ inputs.TODO }}
        run: |
          chmod a+x *.sh

          if [[ "$TODO" == "defconfig" ]]; then
              export GENERATE_DEFCONFIG=true ;;
          fi

          ./build.sh

      - name: Upload Artifact (AK3 and Images)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BASE_NAME }}-${{ github.run_number }}
          path: |
            artifacts/*.zip
            artifacts/*.img

      - name: Upload Artifact (Info file)
        uses: actions/upload-artifact@v4
        with:
          name: info-${{ github.run_number }}
          path: |
            artifacts/*.txt